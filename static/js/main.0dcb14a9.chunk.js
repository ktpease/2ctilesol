(this.webpackJsonpnikakudori=this.webpackJsonpnikakudori||[]).push([[0],{16:function(e,t,i){},17:function(e,t,i){},25:function(e,t){},26:function(e,t,i){},28:function(e,t,i){"use strict";i.r(t);var n=i(4),s=i.n(n),l=i(7),o=i.n(l),a=(i(16),i(17),i(8)),c=i(9),d=i(11),r=i(10),h=i(6),u=i.n(h),g=(i(26),i(0));function b(e){var t=parseInt(e.tile,10);if(isNaN(t)||t<0||t>=42)return e.glyph?Object(g.jsx)("span",{className:"game-tile-glyph game-tile-empty",children:"\ud83c\udc2b\ufe0e"}):Object(g.jsx)("span",{className:"game-tile-emoji game-tile-empty",children:"\ud83c\udc2b"});var i="";if(e.selected?i="game-tile-selected":e.hinted&&(i="game-tile-hinted"),e.glyph){var n="";return t>=7&&t<=15||4===t?n="game-tile-glyph-red":t>=16&&t<=24||5===t?n="game-tile-glyph-green":t>=25&&t<=33||6===t?n="game-tile-glyph-blue":t>=34&&t<=37?n="game-tile-glyph-flowers":t>=38&&t<=41&&(n="game-tile-glyph-seasons"),Object(g.jsxs)("span",{className:"game-tile-glyph ".concat(n," ").concat(i," ").concat(e.pointer?"game-tile-pointer":""),onClick:e.onClick,children:[String.fromCodePoint(126976+t),"\ufe0e"]})}return Object(g.jsx)("span",{className:"game-tile-emoji ".concat(i," ").concat(e.pointer?"game-tile-pointer":""),onClick:e.onClick,children:String.fromCodePoint(126976+t)})}var p=function(e){Object(d.a)(i,e);var t=Object(r.a)(i);function i(e){var n;return Object(a.a)(this,i),(n=t.call(this,e)).state={useEmoji:document.fonts.check("12px Segoe UI Emoji"),boardWidth:17,boardHeight:8,seed:1,tiles:[],selectedTile:null,hintedTiles:[],showMatchingTiles:!0,allowDeselect:!0},n}return Object(c.a)(i,[{key:"componentDidMount",value:function(){this.generateBoard(null)}},{key:"generateBoard",value:function(e){for(var t=[],i=[],n=0,s=0,l=0;l<this.state.boardWidth+2;l++)n=t.push({id:n,char:null});for(var o=0;o<this.state.boardHeight;o++){n=t.push({id:n,char:null});for(var a=0;a<this.state.boardWidth;a++)s=(s+1)%34,i.push(n),n=t.push({id:n,char:s});n=t.push({id:n,char:null})}for(var c=0;c<this.state.boardWidth+2;c++)n=t.push({id:n,char:null});for(var d=isNaN(parseInt(e,10))?u()().int32()>>>0:parseInt(e,10)>>>0,r=u()(d),h=0,g=i.length-1;g>0;g--)h=Math.floor(r()*(g+1)),s=t[i[g]].char,t[i[g]].char=t[i[h]].char,t[i[h]].char=s;console.log("Game board seed is ".concat(d)),this.setState({tiles:t,seed:d,selectedTile:null,hintedTiles:[]})}},{key:"handleTileClick",value:function(e){var t=this;if(this.state.selectedTile!==e){if(console.debug("Clicked ".concat(e)),null!==this.state.selectedTile&&this.state.tiles[e].char===this.state.tiles[this.state.selectedTile].char){var i=this.checkValidPath(e,this.state.selectedTile);if(null!==i){console.debug(i);var n=this.state.tiles.slice();return n[e].char=null,n[this.state.selectedTile].char=null,void this.setState({tiles:n,selectedTile:null,hintedTiles:[]})}}if(!0!==this.state.showMatchingTiles)this.setState({selectedTile:e});else{var s=this.state.tiles.filter((function(i){return i.char===t.state.tiles[e].char}));this.setState({hintedTiles:s,selectedTile:e})}}else!0===this.state.allowDeselect&&(this.setState({selectedTile:null,hintedTiles:[]}),console.debug("Unclicked ".concat(e)))}},{key:"checkValidPath",value:function(e,t){if(e===t)return null;var i=this.state.boardWidth+2,n=this.state.boardHeight+2,s=[],l=null,o=t%i-e%i,a=(t-t%i-(e-e%i))/i,c=0;console.debug("tile X delta: ".concat(o)),console.debug("tile Y delta: ".concat(a)),(0!==a||o>0)&&s.push([{segment:[e],dir:"R"}]),(0!==a||o<0)&&s.push([{segment:[e],dir:"L"}]),(0!==o||a>0)&&s.push([{segment:[e],dir:"D"}]),(0!==o||a<0)&&s.push([{segment:[e],dir:"U"}]);for(var d=0;d<s.length;d++)console.debug(s[d]);for(;s.length>0;){var r=s.pop();if(c++,console.debug("Checking path: ".concat(r.at(-1).segment," | ").concat(r.at(-1).dir," | length: ").concat(r.length," | queue: ").concat(s.length)),null===l||3!==r.length){var h=r.at(-1),u=h.segment.at(-1),g=void 0;switch(h.dir){case"R":if((g=this.state.tiles[u+1]).id===t){if(console.debug("- Found simplest path?"),h.segment.push(g.id),r.length<3)return console.debug("-- It is!"),console.debug("".concat(c," PATHS EATEN")),r;console.debug("-- Maybe?"),l=r;continue}if(null!==g.char){console.debug("- Obstruction in path");continue}if(h.segment.push(g.id),r.length<3&&(2!==r.length||t%i===g.id%i))if(t<g.id){console.debug("- Add path U");var b=r.slice();b.push({segment:[g.id],dir:"U"}),s.push(b)}else if(t>g.id){console.debug("- Add path D");var p=r.slice();p.push({segment:[g.id],dir:"D"}),s.push(p)}if(2===r.length&&t%i<g.id%i||g.id%i===i-1){console.debug("- Do not proceed further, will miss");continue}console.debug("- Continuing path"),s.push(r);continue;case"L":if((g=this.state.tiles[u-1]).id===t){if(console.debug("- Found simplest path"),h.segment.push(g.id),r.length<3)return console.debug("-- It is!"),console.debug("".concat(c," PATHS EATEN")),r;console.debug("-- Maybe?"),l=r;continue}if(null!==g.char){console.debug("- Obstruction in path");continue}if(h.segment.push(g.id),r.length<3&&(2!==r.length||t%i===g.id%i))if(t<g.id){console.debug("- Add path U");var f=r.slice();f.push({segment:[g.id],dir:"U"}),s.push(f)}else if(t>g.id){console.debug("- Add path D");var m=r.slice();m.push({segment:[g.id],dir:"D"}),s.push(m)}if(2===r.length&&t%i>g.id%i||g.id%i===0){console.debug("- Do not proceed further, will miss");continue}console.debug("- Continuing path"),s.push(r);continue;case"D":if((g=this.state.tiles[u+i]).id===t){if(console.debug("- Found simplest path"),h.segment.push(g.id),r.length<3)return console.debug("-- It is!"),console.debug("".concat(c," PATHS EATEN")),r;console.debug("-- Maybe?"),l=r;continue}if(null!==g.char){console.debug("- Obstruction in path");continue}if(h.segment.push(g.id),r.length<3&&(2!==r.length||t-t%i===g.id-g.id%i))if(t%i<g.id%i){console.debug("- Add path L");var j=r.slice();j.push({segment:[g.id],dir:"L"}),s.push(j)}else if(t%i>g.id%i){console.debug("- Add path R");var v=r.slice();v.push({segment:[g.id],dir:"R"}),s.push(v)}if(2===r.length&&t<g.id||g.id>=i*(n-1)){console.debug("- Do not proceed further, will miss");continue}console.debug("- Continuing path"),s.push(r);continue;case"U":if((g=this.state.tiles[u-i]).id===t){if(console.debug("- Found simplest path"),h.segment.push(g.id),r.length<3)return console.debug("-- It is!"),console.debug("".concat(c," PATHS EATEN")),r;console.debug("-- Maybe?"),l=r;continue}if(null!==g.char){console.debug("- Obstruction in path");continue}if(h.segment.push(g.id),r.length<3&&(2!==r.length||t-t%i===g.id-g.id%i))if(t%i<g.id%i){console.debug("- Add path L");var T=r.slice();T.push({segment:[g.id],dir:"L"}),s.push(T)}else if(t%i>g.id%i){console.debug("- Add path R");var k=r.slice();k.push({segment:[g.id],dir:"R"}),s.push(k)}if(2===r.length&&t>g.id||g.id<i){console.debug("- Do not proceed further, will miss");continue}console.debug("- Continuing path"),s.push(r);continue}}else console.debug("- Looking for less-line paths")}return console.debug("".concat(c," PATHS EATEN")),l}},{key:"renderHorizontalMap",value:function(){for(var e=this,t=[],i=0;i<this.state.boardHeight;i++)t[i]=Object(g.jsx)("div",{children:this.state.tiles.slice((i+1)*(this.state.boardWidth+2)+1,(i+2)*(this.state.boardWidth+2)-1).map((function(t){return e.renderTile(t)}))},"board-hori-row"+i);return t}},{key:"renderVerticalMap",value:function(){for(var e=this,t=[],i=function(i){t[i]=Object(g.jsx)("div",{children:e.state.tiles.slice(e.state.boardWidth+2,(e.state.boardWidth+2)*(e.state.boardHeight+1)).filter((function(t,n){return n%(e.state.boardWidth+2)===i+1})).reverse().map((function(t){return e.renderTile(t)}))},"board-vert-row"+i)},n=0;n<this.state.boardWidth;n++)i(n);return t}},{key:"renderTile",value:function(e){var t=this;return Object(g.jsx)(b,{tile:e.char,glyph:!this.state.useEmoji,selected:e.id===this.state.selectedTile,hinted:this.state.hintedTiles.includes(e),onClick:function(){return t.handleTileClick(e.id)}},e.id)}},{key:"render",value:function(){var e=this;return Object(g.jsx)(g.Fragment,{children:Object(g.jsxs)("div",{children:[Object(g.jsx)("div",{className:"game-board game-board-horizontal ".concat(this.state.useEmoji?"game-board-emoji":"game-board-glyph"),children:this.renderHorizontalMap()}),Object(g.jsx)("div",{className:"game-board game-board-vertical ".concat(this.state.useEmoji?"game-board-emoji":"game-board-glyph"),children:this.renderVerticalMap()}),Object(g.jsxs)("div",{children:[Object(g.jsx)("button",{onClick:function(){return e.setState((function(e){return{useEmoji:!e.useEmoji}}))},children:"Change tile type"}),Object(g.jsx)("button",{onClick:function(){return e.generateBoard()},children:"New board"}),Object(g.jsx)("button",{onClick:function(){return e.generateBoard(e.state.seed)},children:"Reset board"})]}),Object(g.jsxs)("div",{children:["Board #",this.state.seed]})]})})}}]),i}(s.a.Component);var f=function(){return Object(g.jsx)("div",{className:"App",children:Object(g.jsx)(p,{})})},m=function(e){e&&e instanceof Function&&i.e(3).then(i.bind(null,29)).then((function(t){var i=t.getCLS,n=t.getFID,s=t.getFCP,l=t.getLCP,o=t.getTTFB;i(e),n(e),s(e),l(e),o(e)}))};o.a.render(Object(g.jsx)(s.a.StrictMode,{children:Object(g.jsx)(f,{})}),document.getElementById("root")),m()}},[[28,1,2]]]);
//# sourceMappingURL=main.0dcb14a9.chunk.js.map